generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cashout {
  amount      Int
  date        DateTime  @db.Date
  id          Int       @id @default(autoincrement())
  portfolioId Int
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id], onDelete: Cascade)

  @@map("cashout")
}

model Deal {
  amount      Int
  date        DateTime
  exchange    String    
  id          Int       @id @default(autoincrement())
  portfolioId Int
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id], onDelete: Cascade)
  price       Decimal
  securityId  Int
  secType     String
  ticker      String
  type        String

  @@map("deal")
}

model Deposit {
  amount      Int
  date        DateTime  @db.Date
  id          Int       @id @default(autoincrement())
  portfolioId Int
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id], onDelete: Cascade)

  @@map("deposit")
}

model MoexShare {
  board     String
  engine    String
  id        Int        @id @default(autoincrement())
  market    String
  name      String
  shortName String
  ticker    String     @unique

  @@map("moex_shares")
}

model MoexBond {
  board     String
  engine    String
  id        Int        @id @default(autoincrement())
  market    String
  name      String
  shortName String
  ticker    String     @unique

  @@map("moex_bonds")
}

model Portfolio {
  cashouts Cashout[]
  compound Boolean   @default(false)
  deals    Deal[]
  deposits Deposit[]
  id       Int       @id @default(autoincrement())
  name     String
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   Int

  @@map("portfolio")
}

model User {
  email          String      @unique
  hashedPassword String
  id             Int         @id @default(autoincrement())
  name           String
  portfolios     Portfolio[]
  role           String      @default("INVESTOR")

  @@map("user")
}



